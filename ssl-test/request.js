IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: null,
      ended: false,
      endEmitted: false,
      reading: false,
      sync: true,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: true,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    socket: TLSSocket {
      _tlsOptions: {
        secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback],
        enableTrace: undefined,
        pauseOnConnect: false,
        pskCallback: undefined,
        pskIdentityHint: undefined
      },
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      _SNICallback: null,
      servername: '192.168.44.1.xip.io',
      alpnProtocol: false,
      authorized: false,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onServerSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        drain: [Function: bound socketOnDrain],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause]
      },
      _eventsCount: 10,
      connecting: false,
      _hadError: false,
      _parent: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 105,
        [Symbol(kHandle)]: [TCP],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      readable: true,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object]
      },
      writable: true,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        pfx: undefined,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 4a 77 49 42 41 41 4b 43 41 67 45 41 71 ... 3244 more bytes>,
        passphrase: undefined,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 45 79 7a 43 43 41 72 4f 67 41 77 49 42 41 67 49 55 4a ... 1702 more bytes>,
        clientCertEngine: undefined,
        ca: undefined,
        minVersion: undefined,
        maxVersion: undefined,
        secureProtocol: undefined,
        crl: undefined,
        sigalgs: undefined,
        ciphers: undefined,
        ecdhCurve: undefined,
        dhparam: undefined,
        honorCipherOrder: true,
        secureOptions: undefined,
        sessionIdContext: 'd6f0263d825ac38ad5847c044132d31b',
        _sharedCreds: [SecureContext],
        _events: [Object: null prototype],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::443',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(pskcallback)]: undefined,
        [Symbol(pskidentityhint)]: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(asyncId)]: 2,
        [Symbol(enableTrace)]: undefined
      },
      _server: null,
      ssl: TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 3063,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular]
      },
      _requestCert: false,
      _rejectUnauthorized: true,
      timeout: 120000,
      parser: HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 0
      },
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: ServerResponse {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: null
      },
      [Symbol(res)]: TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 3063,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular]
      },
      [Symbol(asyncId)]: 106,
      [Symbol(kHandle)]: TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 3063,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular]
      },
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 3064,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 110,
        [Symbol(triggerId)]: 106
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(error-emitted)]: false
    },
    connection: TLSSocket {
      _tlsOptions: {
        secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback],
        enableTrace: undefined,
        pauseOnConnect: false,
        pskCallback: undefined,
        pskIdentityHint: undefined
      },
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      _SNICallback: null,
      servername: '192.168.44.1.xip.io',
      alpnProtocol: false,
      authorized: false,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onServerSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        drain: [Function: bound socketOnDrain],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause]
      },
      _eventsCount: 10,
      connecting: false,
      _hadError: false,
      _parent: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 105,
        [Symbol(kHandle)]: [TCP],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      readable: true,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object]
      },
      writable: true,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        pfx: undefined,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 4a 77 49 42 41 41 4b 43 41 67 45 41 71 ... 3244 more bytes>,
        passphrase: undefined,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 45 79 7a 43 43 41 72 4f 67 41 77 49 42 41 67 49 55 4a ... 1702 more bytes>,
        clientCertEngine: undefined,
        ca: undefined,
        minVersion: undefined,
        maxVersion: undefined,
        secureProtocol: undefined,
        crl: undefined,
        sigalgs: undefined,
        ciphers: undefined,
        ecdhCurve: undefined,
        dhparam: undefined,
        honorCipherOrder: true,
        secureOptions: undefined,
        sessionIdContext: 'd6f0263d825ac38ad5847c044132d31b',
        _sharedCreds: [SecureContext],
        _events: [Object: null prototype],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::443',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(pskcallback)]: undefined,
        [Symbol(pskidentityhint)]: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(asyncId)]: 2,
        [Symbol(enableTrace)]: undefined
      },
      _server: null,
      ssl: TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 3063,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular]
      },
      _requestCert: false,
      _rejectUnauthorized: true,
      timeout: 120000,
      parser: HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 0
      },
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: ServerResponse {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: null
      },
      [Symbol(res)]: TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 3063,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular]
      },
      [Symbol(asyncId)]: 106,
      [Symbol(kHandle)]: TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 3063,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular]
      },
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 3064,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 110,
        [Symbol(triggerId)]: 106
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(error-emitted)]: false
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: false,
    headers: { host: '192.168.44.1.xip.io', connection: 'close' },
    rawHeaders: [ 'Host', '192.168.44.1.xip.io', 'Connection', 'close' ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: TLSSocket {
      _tlsOptions: {
        secureContext: [SecureContext],
        isServer: true,
        server: [Server],
        requestCert: false,
        rejectUnauthorized: true,
        handshakeTimeout: 120000,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNICallback],
        enableTrace: undefined,
        pauseOnConnect: false,
        pskCallback: undefined,
        pskIdentityHint: undefined
      },
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      _SNICallback: null,
      servername: '192.168.44.1.xip.io',
      alpnProtocol: false,
      authorized: false,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onServerSocketSecure],
        _tlsError: [Function: onSocketTLSError],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        drain: [Function: bound socketOnDrain],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause]
      },
      _eventsCount: 10,
      connecting: false,
      _hadError: false,
      _parent: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState],
        readable: true,
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server],
        _server: [Server],
        [Symbol(asyncId)]: 105,
        [Symbol(kHandle)]: [TCP],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      readable: true,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object]
      },
      writable: true,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        pfx: undefined,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 4a 77 49 42 41 41 4b 43 41 67 45 41 71 ... 3244 more bytes>,
        passphrase: undefined,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 45 79 7a 43 43 41 72 4f 67 41 77 49 42 41 67 49 55 4a ... 1702 more bytes>,
        clientCertEngine: undefined,
        ca: undefined,
        minVersion: undefined,
        maxVersion: undefined,
        secureProtocol: undefined,
        crl: undefined,
        sigalgs: undefined,
        ciphers: undefined,
        ecdhCurve: undefined,
        dhparam: undefined,
        honorCipherOrder: true,
        secureOptions: undefined,
        sessionIdContext: 'd6f0263d825ac38ad5847c044132d31b',
        _sharedCreds: [SecureContext],
        _events: [Object: null prototype],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::443',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(pskcallback)]: undefined,
        [Symbol(pskidentityhint)]: undefined,
        [Symbol(kCapture)]: false,
        [Symbol(asyncId)]: 2,
        [Symbol(enableTrace)]: undefined
      },
      _server: null,
      ssl: TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 3063,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular]
      },
      _requestCert: false,
      _rejectUnauthorized: true,
      timeout: 120000,
      parser: HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming],
        parsingHeadersStart: 0
      },
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: ServerResponse {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        [Symbol(kCapture)]: false,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: null
      },
      [Symbol(res)]: TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 3063,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular]
      },
      [Symbol(asyncId)]: 106,
      [Symbol(kHandle)]: TLSWrap {
        _parent: [TCP],
        _parentWrap: [Socket],
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: onhandshakestart],
        onhandshakedone: [Function: onhandshakedone],
        onclienthello: [Function: loadSession],
        oncertcb: [Function: loadSNI],
        onnewsession: [Function: onnewsession],
        onkeylog: [Function: onkeylog],
        lastHandshakeTime: 3063,
        handshakes: 0,
        onerror: [Function: onerror],
        _consumed: true,
        [Symbol(owner)]: [Circular]
      },
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 3064,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 110,
        [Symbol(triggerId)]: 106
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(error-emitted)]: false
    },
    _consuming: false,
    _dumped: false,
    [Symbol(kCapture)]: false
  }